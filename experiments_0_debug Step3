*******STEP 3*******
[nltk_data] Downloading package benepar_en3 to
[nltk_data]     /scratch/scratch8/madhurjindal/acs-qg-env/nltk_data...
[nltk_data]   Package benepar_en3 is already up-to-date!
[nltk_data] Downloading package punkt to
[nltk_data]     /scratch/scratch8/madhurjindal/acs-qg-env/nltk_data...
[nltk_data]   Package punkt is already up-to-date!
Start loading constants ...
Finished loading constants ...
Better speed can be achieved with apex installed from https://www.github.com/nvidia/apex.
/scratch/scratch8/madhurjindal/ACS-QG-Scratch/Datasets/processed/SQuAD1.1-Zhou/squad_sample_probs.pkl loaded.

[nltk_data] Downloading package benepar_en3 to
[nltk_data]     /scratch/scratch8/madhurjindal/acs-qg-env/nltk_data...
[nltk_data]   Package benepar_en3 is already up-to-date!
[nltk_data] Downloading package punkt to
[nltk_data]     /scratch/scratch8/madhurjindal/acs-qg-env/nltk_data...
[nltk_data]   Package punkt is already up-to-date!
Start loading constants ...
Finished loading constants ...
Better speed can be achieved with apex installed from https://www.github.com/nvidia/apex.
/scratch/scratch8/madhurjindal/ACS-QG-Scratch/Datasets/processed/SQuAD1.1-Zhou/squad_sample_probs.pkl loaded.

  0%|          | 0/442 [00:00<?, ?it/s]  1%|          | 3/442 [00:00<00:16, 26.42it/s]  2%|▏         | 9/442 [00:00<00:10, 42.91it/s]  3%|▎         | 14/442 [00:00<00:10, 42.54it/s]  6%|▌         | 26/442 [00:00<00:05, 70.43it/s]  8%|▊         | 35/442 [00:00<00:05, 76.16it/s] 11%|█         | 47/442 [00:00<00:04, 87.82it/s] 13%|█▎        | 58/442 [00:00<00:04, 93.99it/s] 17%|█▋        | 73/442 [00:00<00:03, 109.55it/s] 19%|█▉        | 85/442 [00:00<00:03, 106.95it/s] 22%|██▏       | 96/442 [00:01<00:03, 105.15it/s] 25%|██▌       | 111/442 [00:01<00:02, 117.50it/s] 30%|██▉       | 132/442 [00:01<00:02, 140.39it/s] 33%|███▎      | 147/442 [00:01<00:02, 130.60it/s] 36%|███▋      | 161/442 [00:01<00:02, 122.07it/s] 39%|███▉      | 174/442 [00:01<00:02, 110.30it/s] 42%|████▏     | 186/442 [00:01<00:02, 102.93it/s] 45%|████▍     | 197/442 [00:01<00:02, 102.49it/s] 47%|████▋     | 208/442 [00:02<00:02, 104.22it/s] 50%|████▉     | 219/442 [00:02<00:02, 104.03it/s] 52%|█████▏    | 230/442 [00:02<00:02, 105.36it/s] 55%|█████▍    | 242/442 [00:02<00:01, 106.84it/s] 57%|█████▋    | 253/442 [00:02<00:01, 107.37it/s] 60%|█████▉    | 264/442 [00:02<00:01, 106.01it/s] 62%|██████▏   | 276/442 [00:02<00:01, 107.19it/s] 65%|██████▍   | 287/442 [00:02<00:01, 107.22it/s] 68%|██████▊   | 301/442 [00:02<00:01, 114.94it/s] 71%|███████   | 313/442 [00:03<00:01, 106.62it/s] 74%|███████▍  | 329/442 [00:03<00:00, 120.14it/s] 77%|███████▋  | 342/442 [00:03<00:00, 118.57it/s] 80%|████████  | 354/442 [00:03<00:00, 114.06it/s] 83%|████████▎ | 366/442 [00:03<00:00, 109.76it/s] 86%|████████▌ | 378/442 [00:03<00:00, 110.77it/s] 88%|████████▊ | 390/442 [00:03<00:00, 108.62it/s] 91%|█████████▏| 404/442 [00:03<00:00, 114.86it/s] 94%|█████████▍| 416/442 [00:03<00:00, 104.93it/s] 97%|█████████▋| 427/442 [00:04<00:00, 99.65it/s]  99%|█████████▉| 439/442 [00:04<00:00, 104.85it/s]100%|██████████| 442/442 [00:04<00:00, 104.90it/s]
[nltk_data] Downloading package benepar_en3 to
[nltk_data]     /scratch/scratch8/madhurjindal/acs-qg-env/nltk_data...
[nltk_data]   Package benepar_en3 is already up-to-date!
[nltk_data] Downloading package punkt to
[nltk_data]     /scratch/scratch8/madhurjindal/acs-qg-env/nltk_data...
[nltk_data]   Package punkt is already up-to-date!
Start loading constants ...
Finished loading constants ...
Better speed can be achieved with apex installed from https://www.github.com/nvidia/apex.
/scratch/scratch8/madhurjindal/ACS-QG-Scratch/Datasets/processed/SQuAD1.1-Zhou/squad_sample_probs.pkl not exist.
Now start generate these files.

Start get SQuAD raw examples ...
  0%|          | 0/86635 [00:00<?, ?it/s]  0%|          | 19/86635 [00:00<00:10, 8228.37it/s]
You're using a T5TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Time of get raw examples: 0:00:01.555262
Number of raw examples:  20
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
/scratch/scratch8/madhurjindal/ACS-QG-Scratch/Datasets/processed/SQuAD1.1-Zhou/squad_sample_probs.pkl loaded.

Start augment data...
0
1
2
3
4
5
6
7
8
9
Saving save augmented sentences......
[nltk_data] Downloading package benepar_en3 to
[nltk_data]     /scratch/scratch8/madhurjindal/acs-qg-env/nltk_data...
[nltk_data]   Package benepar_en3 is already up-to-date!
[nltk_data] Downloading package punkt to
[nltk_data]     /scratch/scratch8/madhurjindal/acs-qg-env/nltk_data...
[nltk_data]   Package punkt is already up-to-date!
You're using a T5TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Start loading constants ...
Finished loading constants ...
Better speed can be achieved with apex installed from https://www.github.com/nvidia/apex.
/scratch/scratch8/madhurjindal/ACS-QG-Scratch/Datasets/processed/SQuAD1.1-Zhou/squad_sample_probs.pkl loaded.

Start augment data...
0
1
2
3
4
5
6
7
8
9
Saving save augmented sentences......
*******STEP 4*******
